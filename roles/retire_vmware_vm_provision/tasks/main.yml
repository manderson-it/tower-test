---
#- name: Get next available IP address from Infoblox DDI
#  set_fact:
#    ipaddr: "{{ lookup('nios_next_ip', '192.168.10.0/24', provider=nios_provider) }}"
#  delegate_to: localhost
- name: debug vars set with set_facts
  debug:
    var: ipaddr
    
- name: debug vars set with set_facts
  debug:
    var: netmask
    
#- name: Get VM IP (could ask Infoblox API with vmware_vm_name as an alternative task)
#  vmware_guest_facts:
#    hostname: "{{ vmware_vcenter_hostname }}"
#    username: "{{ vmware_vcenter_username }}"
#    password: "{{ vmware_vcenter_password }}"
#    datacenter: "{{ vmware_vcenter_datacenter }}"
#    name: "{{ vmware_vm_name }}"
#    validate_certs: false
#  register: vminfo
#  delegate_to: localhost

- name: Retire virtual machine on VMware
  vmware_guest:
    hostname: "{{ vmware_vcenter_hostname }}"
    username: "{{ vmware_vcenter_username }}"
    password: "{{ vmware_vcenter_password }}"
    validate_certs: false
    name: "{{ vmware_vm_name }}"
    force: yes # required for VM in poweredOn state
    state: absent
  register: vminfo
  delegate_to: localhost
  
- name: (simulate) Call Infoblox to release IP
  debug:
    msg: "Calling Infoblox to release IP {{ vminfo.instance.ipv4 }}"
